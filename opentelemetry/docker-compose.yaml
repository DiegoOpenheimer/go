services:
  service_a:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      SERVICE_A_PORT: ${SERVICE_A_PORT:-3000}
      SERVICE_B_URL: http://service_b:${SERVICE_B_PORT:-3001}
      SERVICE_NAME: service_a
      OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
    depends_on:
      - zipkin
      - otel-collector
      - service_b

  service_b:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      SERVICE_B_PORT: ${SERVICE_B_PORT:-3001}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      SERVICE_NAME: service_b
      OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
    depends_on:
      - zipkin
      - otel-collector

  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to increase heap size
      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:9411/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
    depends_on:
      zipkin:
        condition: service_healthy
